{{- $appVersion := .Chart.AppVersion -}}
{{- $namespace := .Release.Namespace -}}
{{- $releaseName := .Release.Name }}
{{- if .Values.installation.msa }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "thingsboard.ruleengine.label" . }}
  namespace: {{ $namespace }}
  annotations:
  {{- .Values.engine.annotations | toYaml | nindent 4}}
  labels:
    app: {{ include "thingsboard.ruleengine.label" . }}
spec:
  serviceName: {{ include "thingsboard.ruleengine.label" . }}
  replicas: {{ .Values.engine.statefulSet.replicas }}
  selector:
    matchLabels:
      app: {{ include "thingsboard.ruleengine.label" . }}
  template:
    metadata:
      labels:
        app: {{ include "thingsboard.ruleengine.label" . }}
    spec:
      nodeSelector:
        {{- .Values.engine.nodeSelector | toYaml | nindent 8 }}
      affinity:
        {{- .Values.engine.affinity | toYaml | nindent 8 }}
      securityContext:
        {{- .Values.engine.securityContext | toYaml | nindent 8 }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecret }}
      initContainers: {{ include "thingsboard.initcontainers" . | indent 8 }}
      containers:
        - name: server
          imagePullPolicy: {{ .Values.engine.imagePullPolicy }}
          image: {{ include "thingsboard.engine.image" . }}
          ports:
            {{- range .Values.engine.ports }}
            - containerPort: {{ .value }}
              name: {{ .name }}
              protocol: {{ .protocol | default "TCP" | toString }}
            {{- end}}
          env:
            {{- if and .Values.installation.pe }}
              {{- if .Values.report.enabled }}
            - name: REPORTS_SERVER_ENDPOINT_URL
              value: {{ printf "http://%s-web-report:8383" $releaseName }}
              {{- end }}
            - name: TB_LICENSE_SECRET
              valueFrom:
                secretKeyRef:
                  name: tb-license
                  key: license-key
            - name: TB_LICENSE_INSTANCE_DATA_FILE
              value: "/data/instance-license-$(TB_SERVICE_ID).data"
            {{- end }}
            {{- range $transportKey, $transportValue := .Values.transports }}
            - name: {{$transportKey | upper }}_ENABLED
              value: {{ $transportValue.enabled | quote }}
            {{- end }}
            - name: TB_SERVICE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TB_SERVICE_TYPE
              value: "tb-rule-engine"
            - name: HTTP_LOG_CONTROLLER_ERROR_STACK_TRACE
              value: "false"
          envFrom:
            - configMapRef:
                name: {{$releaseName}}-node-custom-env
            {{- include "thingboard.coordinator.configuration.ref" . | indent 12 }}
            {{- include "thingboard.queue.configuration.ref" . | indent 12 }}
            {{- include "thingboard.cache.configuration.ref" . | indent 12 }}
            {{- include "thingboard.cassandra.configuration.ref" . | indent 12 }}
            {{- include "thingboard.postgres.configuration.ref" . | indent 12 }}
          readinessProbe:
            {{- .Values.engine.readinessProbe | toYaml | nindent 12 }}
          livenessProbe:
            {{- .Values.engine.livenessProbe | toYaml | nindent 12 }}
          resources:
            {{- .Values.engine.resources | toYaml | nindent 12 }}
          volumeMounts:
            - name: {{$releaseName}}-rule-engine-config
              mountPath: /config
            - name: {{$releaseName}}-node-logs
              mountPath: /var/log/thingsboard
            - name: {{$releaseName}}-node-data
              mountPath: /data
              readOnly: false
      restartPolicy: {{ .Values.node.restartPolicy }}
      volumes:
        - name: {{ $releaseName }}-rule-engine-config
          configMap:
            name: {{ $releaseName }}-rule-engine-config
            items:
              - key: conf
                path: thingsboard.conf
              - key: logback
                path: logback.xml
        - name: {{ $releaseName }}-node-logs
          emptyDir: {}
        {{- if not .Values.engine.persistence.enabled }}
        - name: {{ printf "%s-node-data" $releaseName}}
          emptyDir: {}
        {{- else if .Values.engine.persistence.existingClaim }}
        - name: {{ printf "%s-node-data" $releaseName}}
          persistentVolumeClaim:
            claimName: {{ .Values.engine.persistence.existingClaim }}
        {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: {{ printf "%s-node-data" $releaseName}}
      spec:
        accessModes: {{ .Values.engine.persistence.accessModes }}
        resources:
          requests:
            storage: {{ .Values.engine.persistence.size }}
        storageClassName: {{ ternary "" .Values.engine.persistence.storageClass (empty .Values.engine.persistence.storageClass) }}
        {{- end }}
{{- end}}
